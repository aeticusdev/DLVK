#version 450

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) readonly buffer InputBufferA {
    float data_a[];
};

layout(set = 0, binding = 1) readonly buffer InputBufferB {
    float data_b[];
};

layout(set = 0, binding = 2) writeonly buffer OutputBuffer {
    float data_out[];
};

layout(push_constant) uniform PushConstants {
    uint size;
} pc;

void main() {
    uint index = gl_GlobalInvocationID.x;
    
    if (index >= pc.size) {
        return;
    }
    

    float b_val = data_b[index];
    if (abs(b_val) < 1e-8) {
        data_out[index] = sign(data_a[index]) * 1e8; // Large value with correct sign
    } else {
        data_out[index] = data_a[index] / b_val;
    }
}
