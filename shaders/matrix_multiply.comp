#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(set = 0, binding = 0) readonly buffer InputBufferA {
    float data_a[];
};

layout(set = 0, binding = 1) readonly buffer InputBufferB {
    float data_b[];
};

layout(set = 0, binding = 2) writeonly buffer OutputBuffer {
    float data_out[];
};

layout(push_constant) uniform PushConstants {
    uint M;  // rows of A
    uint N;  // cols of A, rows of B
    uint P;  // cols of B
} pc;

void main() {
    uint row = gl_GlobalInvocationID.x;
    uint col = gl_GlobalInvocationID.y;
    
    if (row >= pc.M || col >= pc.P) {
        return;
    }
    
    float sum = 0.0;
    for (uint k = 0; k < pc.N; ++k) {
        sum += data_a[row * pc.N + k] * data_b[k * pc.P + col];
    }
    
    data_out[row * pc.P + col] = sum;
}
