#version 450

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) readonly buffer PredictionsBuffer {
    float predictions[];
};

layout(std430, binding = 1) readonly buffer TargetsBuffer {
    float targets[];
};

layout(std430, binding = 2) writeonly buffer GradientBuffer {
    float gradients[];
};

layout(push_constant) uniform PushConstants {
    uint size;
    float epsilon;  // For numerical stability
} push_constants;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    
    if (idx >= push_constants.size) {
        return;
    }
    
    // Binary cross-entropy gradient: (pred - target) / (pred * (1 - pred) + eps)
    float pred = predictions[idx];
    float target = targets[idx];
    float pred_clamped = clamp(pred, push_constants.epsilon, 1.0 - push_constants.epsilon);
    
    // Simplified gradient: (pred - target) / (pred * (1 - pred))
    float denominator = pred_clamped * (1.0 - pred_clamped) + push_constants.epsilon;
    gradients[idx] = (pred_clamped - target) / denominator / float(push_constants.size);
}
