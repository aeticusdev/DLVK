#version 450

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) buffer InputBuffer {
    float input_data[];
};

layout(binding = 1) buffer OutputBuffer {
    float output_data[];
};

layout(push_constant) uniform PushConstants {
    uint batch_size;
    uint features;
    uint total_size;
} pc;

void main() {
    uint feature_idx = gl_GlobalInvocationID.x;
    
    if (feature_idx >= pc.features) {
        return;
    }
    
    // Sum along batch dimension (axis=0)
    // Input: [batch_size, features], Output: [features]
    float sum = 0.0;
    for (uint batch_idx = 0; batch_idx < pc.batch_size; ++batch_idx) {
        uint input_idx = batch_idx * pc.features + feature_idx;
        sum += input_data[input_idx];
    }
    
    output_data[feature_idx] = sum;
}
